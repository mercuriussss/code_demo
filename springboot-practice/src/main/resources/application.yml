spring:
  datasource:
    shardingjdbc:
      url: jdbc:mysql://localhost:3306/sharding_jdbc?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8
      username: root
      password: root
      driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
  shardingsphere:
    # 属性配置
    props:
      # 是否开启 SQL 显示，默认值: false
      sql:
        show: true
    # 数据源配置，可配置多个
    datasource:
      # 本案例中配置了三个数据源，分别对应刚才创建的三个 MySQL 容器
      names: sharding-jdbc-1,sharding-jdbc-2,sharding-jdbc-3
      sharding-jdbc-1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sharding_jdbc_1?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8
        username: root
        password: root
      sharding-jdbc-2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sharding_jdbc_2?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8
        username: root
        password: root
      sharding-jdbc-3:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sharding_jdbc_3?useSSL=false&useLegacyDatetimeCode=false&characterEncoding=utf8
        username: root
        password: root

    # 分片规则配置
    sharding:
      # 默认数据源
      default-data-source-name: sharding-jdbc-1
      default: sharding-jdbc-1
      # 默认数据库分片策略，同分库策略
      default-database-strategy:
        standard:
          shardingColumn: user_id
          preciseAlgorithmClassName: com.ouroboros.springbootpractice.sharding.algorithm.ShardingSchemaHashModAlgorithm
      # 数据分片规则配置，可配置多个
      tables:
        # 分库+分表
        user_table:
          actual-data-nodes: sharding-jdbc-$->{1..3}.user_table_$->{0..15}
          table-strategy:
            standard:
              shardingColumn: user_id
              preciseAlgorithmClassName: com.ouroboros.springbootpractice.sharding.algorithm.ShardingTableHashModAlgorithm
logging:
  level:
    com.ouroboros.springbootpractice.dao.original: debug